{"version":3,"sources":["sw.js"],"names":["VERSION","CACHE_NAME","self","addEventListener","event","waitUntil","names","caches","keys","Promise","all","map","name","delete","clients","claim","respondWith","cache","open","cachedResponse","match","request","response","fetch","put","clone"],"mappings":";AAAA,MAAMA,EAAU,KACVC,EAAc,oBAqBpBC,KAAKC,iBAAiB,WAAaC,IACjCA,EAAMC,UACJ,WACQC,MAAAA,QAAcC,OAAOC,aACrBC,QAAQC,IACZJ,EAAMK,IAAKC,IACLA,GAAAA,IAASX,EACJM,OAAAA,OAAOM,OAAOD,YAIrBE,QAAQC,SAThB,MAiBJb,KAAKC,iBAAiB,QAAUC,IAC9BA,EAAMY,YAAY,WACVC,MAAAA,QAAcV,OAAOW,KAAKjB,GAC1BkB,QAAuBF,EAAMG,MAAMhB,EAAMiB,SAC3CF,GAAAA,EAEKA,OAAAA,EACF,CACCG,MAAAA,QAAiBC,MAAMnB,EAAMiB,SAE5BC,OADPL,EAAMO,IAAIpB,EAAMiB,QAASC,EAASG,SAC3BH,IATO","file":"sw.js","sourceRoot":"..","sourcesContent":["const VERSION = \"v3\";\nconst CACHE_NAME = `flexion-friend-${VERSION}`;\n\n// const APP_STATIC_RESOURCES = [\n//   \"/\",\n//   \"/index.html\",\n//   \"/app.js\",\n//   \"/cycletrack.json\",\n//   \"/icons/wheel.svg\",\n// ];\n\n\n// self.addEventListener(\"install\", (event) => {\n//   event.waitUntil(\n//     (async () => {\n//       const cache = await caches.open(CACHE_NAME);\n//       cache.addAll(APP_STATIC_RESOURCES);\n//     })()\n//   );\n// });\n\n\nself.addEventListener(\"activate\", (event) => {\n  event.waitUntil(\n    (async () => {\n      const names = await caches.keys();\n      await Promise.all(\n        names.map((name) => {\n          if (name !== CACHE_NAME) {\n            return caches.delete(name);\n          }\n        })\n      );\n      await clients.claim();\n    })()\n  );\n});\n\n/**\n * After the first load, all the assets should be cached.\n */\nself.addEventListener(\"fetch\", (event) => {\n  event.respondWith((async () => {\n    const cache = await caches.open(CACHE_NAME);\n    const cachedResponse = await cache.match(event.request);\n    if (cachedResponse) {\n      // Return the cached response if it's available.\n      return cachedResponse;\n    } else {\n      const response = await fetch(event.request);\n      cache.put(event.request, response.clone());\n      return response;\n    }\n  })());\n});\n"]}